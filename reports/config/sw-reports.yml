---
ReportDefinitions:
- reportName: ULBWiseSewerageChargeCollection
  summary: State Wide Sewerage Charge Collection
  version: 1.0.0
  moduleName: rainmaker-sw
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: pt
    total: false
  - name: ward
    label: Ward
    type: string
    source: pt
    total: false
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    total: false
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    total: false
  - name: connectiontype
    label: Connection Type
    type: string
    source: pt
    total: false
  - name: totaltaxamt
    label: Total Demand Amount
    type: string
    source: pt
    total: true
  - name: totalcollectedamt
    label: Collected Amount
    type: string
    source: pt
    total: true
  - name: dueAmount
    label: Due Amount
    type: string
    source: pt
    total: true
  - name: REMAININGBAL
    label: Remaining Balance
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB Name
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: pt
    wrapper: true
    isMandatory: true
    searchClause: AND ewc.tenantid = $ulb
  - name: ward
    label: Ward (Eg 01,02,..)
    type: string
    source: pt
    isMandatory: false
    searchClause: AND EWC.additionaldetails->>'ward'=$ward
  query: |
      select Initcap(Split_part(ewc.tenantid,'.',2)) as ulb,EWC.ADDITIONALDETAILS->>'ward' as WARD,EWC.connectionno,EWC.oldconnectionno,EWS.connectiontype,coalesce(DM.totaltaxamt,0) as TOTALTAXAMT,coalesce(DM.totalcollectedamt,0) as TOTALCOLLECTEDAMT,case when coalesce(DM.TOTALTAXAMT,0) > coalesce(DM.TOTALCOLLECTEDAMT,0) then coalesce(DM.TOTALTAXAMT,0) - coalesce(DM.TOTALCOLLECTEDAMT,0) else 0 end as DUEAMOUNT,case when coalesce(DM.TOTALCOLLECTEDAMT,0) > coalesce(DM.TOTALTAXAMT,0) then coalesce(DM.TOTALCOLLECTEDAMT,0) - coalesce(DM.TOTALTAXAMT,0) else 0 end as REMAININGBAL from eg_sw_connection EWC inner join eg_sw_service EWS on EWC.id = EWS.connection_id left outer join ( select EDV.consumercode,SUM(case when taxheadcode != 'SW_ADVANCE_CARRYFORWARD' then TAXAMOUNT else 0 end) as TOTALTAXAMT,SUM(case when taxheadcode != 'SW_ADVANCE_CARRYFORWARD' then COLLECTIONAMOUNT else -TAXAMOUNT end) as TOTALCOLLECTEDAMT from egbs_demand_v1 EDV inner join egbs_demanddetail_v1 EDV2 on EDV.tenantid = $ulb and EDV2.tenantid = $ulb and EDV.id = EDV2.demandid group by EDV.consumercode) DM on EWC.connectionno = DM.consumercode where EWC.applicationstatus = 'CONNECTION_ACTIVATED' and EWC.isoldapplication = false
  orderby: ORDER BY ewc.tenantid DESC NULLS LAST

- reportName: SewerageConnectionWiseDemandDetailsReport
  summary: Sewerage Connection wise Demand Details Report
  version: 1.0.0
  moduleName: rainmaker-sw
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: pt
    total: false
  - name: ward
    label: Ward
    type: string
    source: pt
    total: false
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    total: false
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    total: false
  - name: totaltaxamt
    label: Total Demand Amount
    type: string
    source: pt
    total: true
  - name: totalcollectedamt
    label: Paid Amount
    type: string
    source: pt
    total: true
  - name: dueAmount
    label: Due Amount
    type: string
    source: pt
    total: true
  - name: REMAININGBAL
    label: Remaining Balance
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB Name
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: pt
    wrapper: true
    isMandatory: true
    searchClause: AND ewc.tenantid = $ulb
  - name: ward
    label: Ward (Eg 01,02,..)
    type: string
    source: pt
    isMandatory: false
    searchClause: AND EWC.additionaldetails->>'ward'=$ward
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    isMandatory: false
    searchClause: AND ewc.connectionno = $connectionno
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    isMandatory: false
    searchClause: AND ewc.oldconnectionno = $oldconnectionno
  query: |
      select INITCAP(SPLIT_PART(EWC.TENANTID,'.',2)) as ULB,EWC.ADDITIONALDETAILS->>'ward' as WARD,EWC.CONNECTIONNO,EWC.OLDCONNECTIONNO,coalesce(DM.TOTALTAXAMT,0) as TOTALTAXAMT,coalesce(DM.TOTALCOLLECTEDAMT,0) as TOTALCOLLECTEDAMT,case when coalesce(DM.TOTALTAXAMT,0) > coalesce(DM.TOTALCOLLECTEDAMT,0) then coalesce(DM.TOTALTAXAMT,0) - coalesce(DM.TOTALCOLLECTEDAMT,0) else 0 end as DUEAMOUNT,case when coalesce(DM.TOTALCOLLECTEDAMT,0) > coalesce(DM.TOTALTAXAMT,0) then coalesce(DM.TOTALCOLLECTEDAMT,0) - coalesce(DM.TOTALTAXAMT,0) else 0 end as REMAININGBAL from EG_SW_CONNECTION EWC inner join EG_SW_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join ( select EDV.CONSUMERCODE,SUM(case when taxheadcode != 'SW_ADVANCE_CARRYFORWARD' then TAXAMOUNT else 0 end) as TOTALTAXAMT,SUM(case when taxheadcode != 'SW_ADVANCE_CARRYFORWARD' then COLLECTIONAMOUNT else -TAXAMOUNT end) as TOTALCOLLECTEDAMT from EGBS_DEMAND_V1 EDV inner join EGBS_DEMANDDETAIL_V1 EDV2 on EDV.tenantid = $ulb and EDV2.tenantid = $ulb and EDV.ID = EDV2.DEMANDID group by EDV.CONSUMERCODE) DM on EWC.connectionno = DM.CONSUMERCODE where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED'

- reportName: ConnectionWiseDemandsReport
  summary: Connection wise Demands Report
  version: 1.0.0
  moduleName: rainmaker-sw
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: pt
    total: false
  - name: ward
    label: Ward
    type: string
    source: pt
    total: false
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    total: false
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    total: false
  - name: demandcreationdate
    label: Demand Generation Date
    type: string
    source: pt
    total: false
  - name: taxperiodfrom
    label: Tax Period From
    type: string
    source: pt
    total: false
  - name: taxperiodto
    label: Tax Period To
    type: string
    source: pt
    total: false
  - name: totaltaxamt
    label: Total Demand Amount
    type: string
    source: pt
    total: true
  - name: totalcollectedamt
    label: Paid Amount
    type: string
    source: pt
    total: true
  - name: dueAmount
    label: Due Amount
    type: string
    source: pt
    total: true
  - name: REMAININGBAL
    label: Remaining Balance
    type: string
    source: pt
    total: true
  searchParams:
  - name: ulb
    label: ULB Name
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: pt
    wrapper: true
    isMandatory: true
    searchClause: AND ewc.tenantid = $ulb
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    isMandatory: true
    searchClause: AND ewc.connectionno = $connectionno
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    isMandatory: false
    searchClause: AND ewc.oldconnectionno = $oldconnectionno
  query: |
      select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, DM.DEMANDCREATIONDATE, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.TOTALTAXAMT, DM.TOTALCOLLECTEDAMT,case when coalesce(DM.TOTALTAXAMT, 0) > coalesce(DM.TOTALCOLLECTEDAMT, 0) then coalesce(DM.TOTALTAXAMT, 0) - coalesce(DM.TOTALCOLLECTEDAMT, 0) else 0 end as DUEAMOUNT,case when coalesce(DM.TOTALCOLLECTEDAMT, 0) > coalesce(DM.TOTALTAXAMT, 0) then coalesce(DM.TOTALCOLLECTEDAMT, 0) - coalesce(DM.TOTALTAXAMT, 0) else 0 end as REMAININGBAL from EG_SW_CONNECTION EWC inner join EG_SW_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.TOTALTAXAMT, edv2.TOTALCOLLECTEDAMT, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select demandid, SUM(CASE WHEN taxheadcode!='SW_ADVANCE_CARRYFORWARD' THEN TAXAMOUNT ELSE 0 END)as TOTALTAXAMT, SUM(CASE WHEN taxheadcode!='SW_ADVANCE_CARRYFORWARD' THEN COLLECTIONAMOUNT ELSE -TAXAMOUNT END)as TOTALCOLLECTEDAMT from EGBS_DEMANDDETAIL_V1 group by demandid)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'SW'

- reportName: SewerageMonthlyDemandsReport
  decryptionPathId: SewerageMonthlyDemandsReport
  summary: Sewerage Monthly Demands Report
  version: 1.0.0
  moduleName: rainmaker-sw
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: pt
    total: false
  - name: ward
    label: Ward
    type: string
    source: pt
    total: false
  - name: connectionno
    label: Connection No
    type: string
    source: pt
    total: false
  - name: oldconnectionno
    label: Old Connection No
    type: string
    source: pt
    total: false
  - name: name
    label: Connection Holder Name
    type: string
    source: pt
    total: false
  - name: mobilenumber
    label: Contact No
    type: string
    source: pt
    total: false
  - name: address
    label: Address
    type: string
    source: pt
    total: false
  - name: CURRENTDEMAND
    label: Current Demand
    type: string
    source: pt
    total: false
  - name: collectionamount
    label: Collection Amount
    type: string
    source: pt
    total: false
  - name: REBATEAMOUNT
    label: Rebate Amount
    type: string
    source: pt
    total: false
  - name: PENALTYAMOUNT
    label: Penalty
    type: string
    source: pt
    total: false
  - name: ADVANCEAMOUNT
    label: Advance
    type: string
    source: pt
    total: false
  - name: arrear
    label: Arrear
    type: string
    source: pt
    total: false
  - name: TOTALDUE
    label: Total Due
    type: string
    source: pt
    total: false
  - name: AMOUNTBEFOREDUEDATE
    label: Amount Payable after Rebate
    type: string
    source: pt
    total: false
  - name: AMOUNTAFTERDUEDATE
    label: Amount Payable with Penalty
    type: string
    source: pt
    total: false
  searchParams:
  - name: ulb
    label: ULB Name
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: pt
    wrapper: true
    isMandatory: true
    searchClause: AND ewc.tenantid = $ulb
  - name: startdate
    label: Start Date
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND (date(formattedtaxperiodto) >= date($startdate)
  - name: enddate
    label: End Date
    type: epoch
    source: pt
    isMandatory: true
    searchClause: AND date(formattedtaxperiodto) <= date($enddate))
  - name: ward
    label: Ward (Eg 01,02,..)
    type: string
    source: pt
    isMandatory: true
    searchClause: AND EWC.additionaldetails->>'ward'=$ward
  query: |
      select INITCAP(SPLIT_PART(EWC.TENANTID, '.', 2))as ULB, EWC.ADDITIONALDETAILS ->> 'ward' AS WARD, name,mobilenumber,address, EWC.CONNECTIONNO, EWC.OLDCONNECTIONNO, ews.connectiontype, DM.DEMANDCREATIONDATE, DM.MONTHOFTAXPERIODTO, DM.TAXPERIODFROM, DM.TAXPERIODTO, DM.DEMANDID, DM.TAXAMOUNT as CURRENTDEMAND, DM.COLLECTIONAMOUNT as collectionamount, coalesce(arreardtl.totalcollectableinarrears,0) - coalesce(arreardtl.totalcollectedinarrears,0) as arrear, DM.REBATEAMOUNT, DM.PENALTYAMOUNT, -DM.ADVANCEAMOUNT AS ADVANCEAMOUNT ,CASE WHEN (DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))>0 THEN DM.TAXAMOUNT-DM.COLLECTIONAMOUNT + DM.PENALTYAMOUNT + DM.ADVANCEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0) ELSE 0 END as TOTALDUE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0))) >0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 0.98)+ DM.ADVANCEAMOUNT + DM.REBATEAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTBEFOREDUEDATE, CASE WHEN (round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)))>0 THEN round(((DM.TAXAMOUNT-DM.COLLECTIONAMOUNT)* 1.05)+ DM.ADVANCEAMOUNT + DM.PENALTYAMOUNT + coalesce(arreardtl.totalcollectableinarrears, 0) - coalesce(arreardtl.totalcollectedinarrears, 0)) ELSE 0 END as AMOUNTAFTERDUEDATE from EG_SW_CONNECTION EWC inner join EG_SW_SERVICE EWS on EWC.ID = EWS.CONNECTION_ID left outer join(select edv.consumercode, to_char(to_timestamp(edv.createdtime / 1000), 'DD-MM-YYYY')as DemandCreationDate, TO_CHAR(to_timestamp(edv.taxperiodto / 1000), 'Mon')as MONTHOFTAXPERIODTO, to_char(to_timestamp(edv.taxperiodfrom / 1000), 'DD-MM-YYYY')as TaxPeriodFrom, to_timestamp(edv.taxperiodto / 1000)as formattedtaxperiodto, to_char(to_timestamp(edv.taxperiodto / 1000), 'DD-MM-YYYY')as TaxPeriodTo, edv2.demandid, edv2.taxamount,edv2.collectionamount, edv2.rebateamount, edv2.penaltyamount, edv2.advanceamount, edv.status, edv.businessservice from EGBS_DEMAND_V1 EDV inner join(select egb1.demandid, egb1.taxheadcode, egb1.taxamount,coalesce(egb1.collectionamount,0) as collectionamount, coalesce(egb2.rebateamount,0)as rebateamount, coalesce(egb3.penaltyamount,0)as penaltyamount, coalesce(egb4.advanceamount,0)as advanceamount from egbs_demanddetail_v1 egb1 left join(select demandid, taxamount as rebateamount from egbs_demanddetail_v1 where taxheadcode = 'SW_TIME_REBATE' AND tenantid=$ulb)egb2 on egb1.demandid = egb2.demandid left join(select demandid, taxamount as penaltyamount from egbs_demanddetail_v1 where taxheadcode = 'SW_TIME_PENALTY' AND tenantid=$ulb)egb3 on egb1.demandid = egb3.demandid left join(select demandid, taxamount as advanceamount from egbs_demanddetail_v1 where taxheadcode = 'SW_ADVANCE_CARRYFORWARD' AND tenantid=$ulb)egb4 on egb1.demandid = egb4.demandid WHERE egb1.taxheadcode = 'SW_CHARGE' AND egb1.tenantid=$ulb)edv2 on EDV.ID = EDV2.DEMANDID)DM on EWC.connectionno = DM.CONSUMERCODE left outer join(select consumercode,sum(totaltaxamt)as totalcollectableinarrears,sum(totalcollectedamt)as totalcollectedinarrears from egbs_demand_v1 egdm1 inner join(SELECT d_detail.DEMANDID,SUM(d_detail.TAXAMOUNT)AS TOTALTAXAMT,SUM(d_detail.COLLECTIONAMOUNT)AS TOTALCOLLECTEDAMT FROM EGBS_DEMANDDETAIL_V1 d_detail,egbs_demand_v1 dd where dd.id=d_detail.demandid AND d_detail.tenantid=$ulb AND dd.tenantid=$ulb GROUP BY d_detail.DEMANDID)egdd1 on egdm1.id=egdd1.demandid where date(to_timestamp(taxperiodto/1000))< date($startdate)AND ispaymentcompleted=false AND businessservice='SW' AND STATUS = 'ACTIVE' AND tenantid=$ulb group by consumercode)arreardtl on EWC.connectionno=arreardtl.consumercode left outer join(select name,mobilenumber,address,connectionid from eg_SW_connectionholder ewch inner join(select name,mobilenumber,address,egu.uuid from eg_user egu inner join eg_user_address eguad on eguad.userid=egu.id where eguad.type = 'CORRESPONDENCE')usr on ewch.userid=usr.uuid)conholder on ewc.id=conholder.connectionid where EWC.APPLICATIONSTATUS = 'CONNECTION_ACTIVATED' AND DM.STATUS = 'ACTIVE' AND DM.BUSINESSSERVICE = 'SW'
