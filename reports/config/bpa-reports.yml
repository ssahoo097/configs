---
ReportDefinitions:
- reportName: BPAStatusReport
  summary: BPA Status Report
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: ulb
    label: ULB/DA Name
    type: string
    source: bpa
    total: false
  - name: applicationno
    label: Application No
    type: string
    source: bpa
    total: false
  - name: businessservice
    label: Type of Application
    type: string
    source: bpa
    total: false
  - name: applicationDate
    label: Application Date
    type: string
    source: bpa
    total: false
  - name: status
    label: Status
    type: string
    source: bpa
    total: false
  - name: approvaldate
    label: Approval Date
    type: string
    source: bpa
    total: false
  - name: approvalno
    label: Approval No
    type: string
    source: bpa
    total: false
  - name: createdtime
    label: Created On
    type: string
    source: bpa
    total: false
  searchParams:
  - name: fromDate
    label: From Date
    type: epoch
    source: tl
    isMandatory: false
    searchClause: AND applicationdate >= $fromDate
  - name: toDate
    label: To Date
    type: epoch
    source: tl
    isMandatory: false
    searchClause: AND applicationdate <= $toDate
  - name: tenant
    label: Tenant
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: AND tenantid = $tenant
  query: |
      SELECT INITCAP(SPLIT_PART(TENANTID,'.',2)) AS ULB,APPLICATIONNO, case when BUSINESSSERVICE like '%BPA_OC%' then 'Occupancy Certificate' else 'Permit Order' end as BUSINESSSERVICE , TO_CHAR(TO_TIMESTAMP(CREATEDTIME / 1000),'DD-MM-YYYY') AS CREATEDTIME, TO_CHAR(TO_TIMESTAMP(APPLICATIONDATE / 1000),'DD-MM-YYYY') AS APPLICATIONDATE, case when status ='INPROGRESS' then 'In-Progress' when status ='PENDING_APPL_FEE_PAYMENT' then 'Pending Application Fee' when status='DOC_VERIFICATION_INPROGRESS' then 'Dcoument Verification Pending' when status='FIELDINSPECTION_INPROGRESS' then 'Field Inspection In Progress' when status='APPROVAL_INPROGRESS' then 'Approval In Progress' when status='PENDING_SANC_FEE_PAYMENT' then 'Pending Sanction Fee Payment' when status='CONSTRUCT_START_INTIMATED' then 'Construction Start Intimated' when status='PLINTH_VERIFICATION_INPROGRESS' then 'Plinth Verification In Progress' when status='GROUNDFLR_VERIFICATION_INPROGRESS' then 'Ground Floor Verification In Progress' when status='TOPFLR_VERIFICATION_INPROGRESS' then 'Top Floor Verification In Progress' when status='TOPFLR_VERIFICATION_COMPLETED' then 'Top Floor Verification Completed' when status='CITIZEN_ACTION_PENDING_AT_DOC_VERIF' then 'Citizen Action Pending at Document Verification' when status='CITIZEN_ACTION_PENDING_AT_APPROVAL' then 'Citizen Action Pending At Approval' when status='APPROVED' then 'Approved' when status='PENDING_APPL_FEE' then 'Pending Application Fee Payment' when status='APP_L1_VERIFICATION_PENDING' then 'Application Level 1 Verification Pending' end as status ,APPROVALNO, CASE WHEN APPROVALDATE > 0 THEN TO_CHAR(TO_TIMESTAMP(APPROVALDATE / 1000),'DD-MM-YYYY') END AS APPROVALDATE FROM EG_BPA_BUILDINGPLAN bpa where status not in ('INITIATED','CITIZEN_APPROVAL_INPROCESS')
  orderby: ORDER BY bpa.createdtime desc

- reportName: Architect&TechnicalPersonDetailsReport
  decryptionPathId: Architect&TechnicalPersonDetailsReport
  summary: Architect&TechnicalPersonDetailsReport
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: name
    label: Name
    type: string
    source: bpa
    total: false
  - name: mobilenumber
    label: Mobile Number
    type: string
    source: bpa
    total: false
  - name: emailid
    label: Mail ID
    type: string
    source: bpa
    total: false
  - name: licensetype
    label: License Type
    type: string
    source: bpa
    total: false
  - name: coadtpnumber
    label: COA/DTP Registration Number
    type: string
    source: bpa
    total: false
  - name: licensenumber
    label: Sujog Registration Number
    type: string
    source: bpa
    total: false
  - name: validfrom
    label: Valid From
    type: string
    source: bpa
    total: false
  - name: validto
    label: Valid To
    type: string
    source: bpa
    total: false
  - name: status
    label: Status
    type: string
    source: bpa
    total: false
  searchParams:
  - name: statusinput
    label: Status
    type: singlevaluelist
    pattern: 'list://PENDINGAPPROVAL:Pending Approval,REJECTED:Rejected,APPROVED:Approved,INITIATED:Initiated'
    source: bpa
    isMandatory: false
    searchClause: AND ett.status=$statusinput
  query: |
      select ett.tenantid as ULB,eu.name as name,eu.mobilenumber as mobilenumber,eu.emailid as emailid,case when INITCAP(SPLIT_PART(ettu.tradetype,'.',1))='Architect' then 'Architect' when INITCAP(SPLIT_PART(ettu.tradetype,'.',1))='Technicalperson' then 'Technical Person' end as licensetype,ett.licensenumber as licensenumber, case when ettd.additionaldetail ->>'counsilForArchNo' is not null then ettd.additionaldetail ->>'counsilForArchNo' when ettd.additionaldetail ->>'DirectorateForTpNo' is not null then ettd.additionaldetail ->>'DirectorateForTpNo' end as coadtpnumber ,to_char(to_timestamp(ett.validfrom / 1000), 'DD-Mon-YYYY') as validfrom,to_char(to_timestamp(ett.validto / 1000), 'DD-Mon-YYYY') as validto,case when ett.status='PENDINGAPPROVAL' then 'Pending Approval' when ett.status='REJECTED' then 'Rejected' when ett.status='APPROVED' then 'Approved' when ett.status='INITIATED' then 'Initiated' end as status from eg_tl_tradelicense ett inner join eg_user eu on ett.accountid=eu.uuid inner join eg_tl_TradeLicenseDetail ettd on ett.id=ettd.tradelicenseId inner join eg_tl_TradeUnit ettu on ettd.id=ettu.tradeLicenseDetailId where ett.businessservice='BPAREG'

- reportName: BPAHighLevelSummaryReport
  summary: BPAHighLevelSummaryReport
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: bpa
    total: false
  - name: approved
    label: Approved
    type: string
    source: bpa
    total: true
  - name: rejected
    label: Rejected
    type: string
    source: bpa
    total: true
  - name: pendingDocVerif
    label: Pending at Document Verification
    type: string
    source: bpa
    total: true
  - name: pendingFieldInspection
    label: Pending at Field Inspection
    type: string
    source: bpa
    total: true
  - name: pendingAtPlanningAssistant
    label: Pending at Planning Assistant
    type: string
    source: bpa
    total: true
  - name: pendingAtPlanningOfficer
    label: Pending at Planning Officer
    type: string
    source: bpa
    total: true
  - name: pendingAtPlanningMember
    label: Pending at Planning Member
    type: string
    source: bpa
    total: true
  - name: pendingAtDpbp
    label: Pending at DPBP Committee
    type: string
    source: bpa
    total: true
  - name: pendingForCitizenAction
    label: Pending for Citizen Action
    type: string
    source: bpa
    total: true
  - name: pendingForArchitectAction
    label: Pending for Architect Action
    type: string
    source: bpa
    total: true
  - name: pendingApplFeePayment
    label: Pending for Application Fee Payment
    type: string
    source: bpa
    total: true
  - name: pendingSancFeePayment
    label: Pending for Permit Fee Payment
    type: string
    source: bpa
    total: true
  searchParams:
  - name: tenant
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: bpa
    wrapper: true
    isMandatory: false
    searchClause: having internal.tenantid=$tenant
  query: |
      select INITCAP(SPLIT_PART(internal.tenantid,'.',2)) as ulb,sum(case when internal.status='Pending at Document Verification' then internal.internalcount else 0 end) pendingDocVerif,sum(case when internal.status='Pending at Field Inspection' then internal.internalcount else 0 end) pendingFieldInspection,sum(case when internal.status='Rejected' then internal.internalcount else 0 end) rejected,sum(case when internal.status='Approved' then internal.internalcount else 0 end) approved,sum(case when internal.status='Pending at Planning Assistant' then internal.internalcount else 0 end) pendingAtPlanningAssistant,sum(case when internal.status='Pending at Planning Officer' then internal.internalcount else 0 end) pendingAtPlanningOfficer,sum(case when internal.status='Pending at Planning Member' then internal.internalcount else 0 end) pendingAtPlanningMember,sum(case when internal.status='Pending at DPBP Committee' then internal.internalcount else 0 end) pendingAtDpbp,sum(case when internal.status='Pending for Citizen Action' then internal.internalcount else 0 end) pendingForCitizenAction,sum(case when internal.status='Pending for Architect Action' then internal.internalcount else 0 end) pendingForArchitectAction,sum(case when internal.status='Pending for Application Fee Payment' then internal.internalcount else 0 end) pendingApplFeePayment,sum(case when internal.status='Pending for Sanction Fee Payment' then internal.internalcount else 0 end) pendingSancFeePayment from (select ebb.tenantid as tenantid,case when ebb.status='DOC_VERIFICATION_INPROGRESS' then 'Pending at Document Verification' when ebb.status='FIELDINSPECTION_INPROGRESS' then 'Pending at Field Inspection' when ebb.status='REJECTED' then 'Rejected' when ebb.status='APPROVED' then 'Approved' when ebb.status='APP_L1_VERIFICATION_INPROGRESS' then 'Pending at Planning Assistant' when ebb.status='APP_L2_VERIFICATION_INPROGRESS' then 'Pending at Planning Officer' when ebb.status='APP_L3_VERIFICATION_INPROGRESS' then 'Pending at Planning Member' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice='BPA1' then 'Pending at Planning Assistant' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice='BPA2' then 'Pending at Planning Officer' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice='BPA3' then 'Pending at Planning Member' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice='BPA4' then 'Pending at DPBP Committee' when ebb.status in ('CITIZEN_APPROVAL_INPROCESS','CITIZEN_ACTION_PENDING_AT_DOC_VERIF','CITIZEN_ACTION_PENDING_AT_APP_L1_VERIF','CITIZEN_ACTION_PENDING_AT_APP_L2_VERIF','CITIZEN_ACTION_PENDING_AT_APP_L3_VERIF','CITIZEN_ACTION_PENDING_AT_APPROVAL') then 'Pending for Citizen Action' when ebb.status in ('INITIATED','INPROGRESS') then 'Pending for Architect Action' when ebb.status='PENDING_APPL_FEE' then 'Pending for Application Fee Payment' when ebb.status='PENDING_SANC_FEE_PAYMENT' then 'Pending for Sanction Fee Payment' else ebb.status end as status,count(ebb.applicationno) as internalcount from eg_bpa_buildingplan ebb group by ebb.status,ebb.tenantid ,ebb.businessservice having ebb.businessservice in ('BPA1','BPA2','BPA3','BPA4')) internal group by internal.tenantid

- reportName: BPAPaymentReport
  summary: BPAPaymentReport
  decryptionPathId: Architect&TechnicalPersonDetailsReport
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: bpa
    total: false
  - name: applicationno
    label: Application Number
    type: string
    source: bpa
    total: false
  - name: name
    label: Applicant Name
    type: string
    source: bpa
    total: false
  - name: mobilenumber
    label: Mobile Number
    type: string
    source: bpa
    total: false
  - name: currentstatus
    label: Current Status
    type: string
    source: bpa
    total: false
  - name: feetype
    label: Fee Type
    type: string
    source: bpa
    total: false
  - name: amount
    label: Amount
    type: string
    source: bpa
    total: false
  - name: paymentdate
    label: Payment Date
    type: string
    source: bpa
    total: false
  - name: receiptno
    label: Receipt Number
    type: string
    source: bpa
    total: false
  searchParams:
  - name: tenant
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: where ebb.tenantid = $tenant
  query: |
      select INITCAP(SPLIT_PART(ebb.tenantid,'.',2)) as ulb,ebb.applicationno as applicationno,eu.name as name,eu.mobilenumber as mobilenumber,ebb.status as currentstatus,case when eb.businessservice in ('BPA.NC_OC_SAN_FEE','BPA.NC_SAN_FEE') then 'Permit Fee' when eb.businessservice in ('BPA.NC_OC_APP_FEE','BPA.NC_APP_FEE') then 'Application Fee' end as feetype,ep.totalamountpaid as amount,to_char(to_timestamp(ep.instrumentdate / 1000), 'DD-Mon-YYYY') as paymentdate,ep.transactionnumber as receiptno from egcl_payment ep inner join egcl_paymentdetail epd on ep.id=epd.paymentid inner join egcl_bill eb on epd.billid=eb.id left outer join eg_bpa_buildingplan ebb on eb.consumercode=ebb.applicationno inner join eg_land_ownerinfo elo on ebb.landid=elo.landinfoid inner join eg_user eu on elo.uuid=eu.uuid

- reportName: BPAApplicationDetailsReport
  summary: BPAApplicationDetailsReport
  decryptionPathId: BPAApplicationDetailsReport
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: bpa
    total: false
  - name: applicationno
    label: Application Number
    type: string
    source: bpa
    total: false
  - name: applicantname
    label: Applicant Name
    type: string
    source: bpa
    total: false
  - name: applicantmobilenumber
    label: Applicant Mobile Number
    type: string
    source: bpa
    total: false
  - name: servicetype
    label: Service Type
    type: string
    source: bpa
    total: false
  - name: architectname
    label: Architect/Tech Person Name
    type: string
    source: bpa
    total: false
  - name: architectmobilenumber
    label: Architect/Tech Person Mobile Number
    type: string
    source: bpa
    total: false
  - name: status
    label: Current Status
    type: string
    source: bpa
    total: false
  - name: pendingdayssincecurrentstatus
    label: Pending Days since Current Status
    type: string
    source: bpa
    total: false
  - name: officernameatpending
    label: Officer/Assignee Name at Pending Status
    type: string
    source: bpa
    total: false
  - name: submissiondate
    label: Submission Date
    type: string
    source: bpa
    total: false
  - name: pendingdayssincesubmission
    label: Pending Days since Submission
    type: string
    source: bpa
    total: false
  - name: approvaldate
    label: Approval Date if Approved
    type: string
    source: bpa
    total: false
  searchParams:
  - name: tenant
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: where ebb.tenantid = $tenant AND ebb.status not IN('INITIATED','CITIZEN_APPROVAL_INPROCESS','PENDING_APPL_FEE','INPROGRESS')
  query: |
    select distinct on(ebb.applicationno) INITCAP(SPLIT_PART(ebb.tenantid,'.',2)) as ULB,ebb.businessservice as servicetype,ebb.applicationno as applicationno, case when ebb.status='DOC_VERIFICATION_INPROGRESS' then 'Pending at Document Verification' when ebb.status='FIELDINSPECTION_INPROGRESS' then 'Pending at Field Inspection' when ebb.status='REJECTED' then 'Rejected' when ebb.status='APPROVED' then 'Approved'when ebb.status='APP_L1_VERIFICATION_INPROGRESS' then 'Pending at Planning Assistant' when ebb.status='APP_L2_VERIFICATION_INPROGRESS' then 'Pending at Planning Officer' when ebb.status='PENDING_ARCHITECT_ACTION_FOR_REWORK' then 'Pending at Architect For Rework' when ebb.status='CONSTRUCT_START_INTIMATED' then 'CONSTRUCT START INTIMATED' when ebb.status='PERMIT_REVOKED' then 'PERMIT REVOKED' when ebb.status='SHOW_CAUSE_REPLY_VERIFICATION_PENDING' then 'SHOW CAUSE REPLY VERIFICATION PENDING' when ebb.status='SHOW_CAUSE_ISSUED' then 'SHOW CAUSE ISSUED'when ebb.status='APP_L3_VERIFICATION_INPROGRESS' then 'Pending at Planning Member' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice in ('BPA4','BPA_OC4') then 'Pending at DPBP committee' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice in('BPA3','BPA_OC3') then 'Pending at Planning Member' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice in ('BPA2','BPA_OC2') then 'Pending at Planning Officer' when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice in('BPA1','BPA_OC1','BPA6') then 'Pending at Planning Assistant' when ebb.status='CITIZEN_APPROVAL_INPROCESS' then 'Pending for citizen approval' when ebb.status='INPROGRESS' then 'Pending for architect submission' when ebb.status='PENDING_APPL_FEE' then 'Pending for application fee payment' when ebb.status='PENDING_SANC_FEE_PAYMENT'then 'Pending for Permit fee payment' when ebb.status in ('CITIZEN_ACTION_PENDING_AT_DOC_VERIF','CITIZEN_ACTION_PENDING_AT_APP_L1_VERIF','CITIZEN_ACTION_PENDING_AT_APP_L2_VERIF','CITIZEN_ACTION_PENDING_AT_APP_L3_VERIF','CITIZEN_ACTION_PENDING_AT_APPROVAL') then 'Pending for Citizen Action'when ebb.status='APPROVAL_INPROGRESS' and ebb.businessservice in('BPA5') then 'Pending at Accredited Person' end as status,eu.name as applicantname,eu.mobilenumber as applicantmobilenumber,ela.locality as village,euarchitect.name as architectname,euarchitect.mobilenumber as architectmobilenumber,ebb.status as currentstatus,floor(((EXTRACT(EPOCH FROM (SELECT NOW())) * 1000)-ewpcs.createdtime)/86400000) as pendingdayssincecurrentstatus,eu1.name as officernameatpending,to_char(to_timestamp(ewp2.createdtime / 1000), 'DD-Mon-YYYY') as submissiondate,floor(((EXTRACT(EPOCH FROM (SELECT NOW())) * 1000)-ewp2.createdtime)/86400000) as pendingdayssincesubmission ,case when ebb.status='APPROVED' then to_char(to_timestamp(ebb.lastmodifiedtime / 1000), 'DD-Mon-YYYY') else null end as approvaldate from  eg_bpa_buildingplan ebb inner join eg_land_ownerinfo elo on ebb.landid=elo.landinfoid inner join eg_user eu on elo.uuid=eu.uuid inner join eg_land_landinfo ell on ebb.landid=ell.id inner join eg_land_address ela on ell.id=ela.landinfoid inner join eg_user euarchitect on ebb.accountid=euarchitect.uuid inner join (select distinct on(businessid) * from eg_wf_processinstance_v2 order by businessid,createdtime desc) as ewpcs on ewpcs.businessid=ebb.applicationno left outer join eg_wf_processinstance_v2 ewp2 on ewp2.businessid=ebb.applicationno and ewp2."action"='APPLY' left outer join eg_wf_assignee_v2 ewa1 on ewpcs.id=ewa1.processinstanceid left outer join eg_user eu1 on ewa1.assignee=eu1.uuid  

- reportName: PaymentDetailReport
  summary: PaymentDetailReport
  decryptionPathId: Architect&TechnicalPersonDetailsReport
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: ulb
    label: ULB
    type: string
    source: bpa
    total: false
  - name: applicationno
    label: Application Number
    type: string
    source: bpa
    total: false
  - name: name
    label: Applicant Name
    type: string
    source: bpa
    total: false
  - name: mobilenumber
    label: Mobile Number
    type: string
    source: bpa
    total: false
  - name: currentstatus
    label: Current Status
    type: string
    source: bpa
    total: false
  - name: feetype
    label: Fee Type
    type: string
    source: bpa
    total: false
  - name: SanctionFee
    label: Sanction Fee
    type: string
    source: bpa
    total: true
  - name: EIDPFee
    label: EIDP Fee
    type: string
    source: bpa
    total: true
  - name: TemporaryRetentionFee
    label: Temporary Retention Fee
    type: string
    source: bpa
    total: true
  - name: PurchasableFarFee
    label: Purchasable Far Fee
    type: string
    source: bpa
    total: true
  - name: LandDevelopmentFee
    label: Land Development Fee
    type: string
    source: bpa
    total: true
  - name: ShelterFee
    label: Shelter Fee
    type: string
    source: bpa
    total: true
  - name: BuildingOperationFee
    label: Building Operation Fee
    type: string
    source: bpa
    total: true
  - name: SecurityDeposit
    label: Security Deposit
    type: string
    source: bpa
    total: true
  - name: WorkerWelfareCess
    label: Worker Welfare Cess
    type: string
    source: bpa
    total: true
  - name: AdjustmentAmount
    label: Other Fee
    type: string
    source: bpa
    total: true
  - name: totalDemandAmount
    label: Demand Amount
    type: string
    source: bpa
    total: true
  - name: totalAdjustedAmount
    label: Paid Amount
    type: string
    source: bpa
    total: true
  - name: paymentdate
    label: Payment Date
    type: string
    source: bpa
    total: false
  - name: receiptno
    label: Receipt Number
    type: string
    source: bpa
    total: false
  searchParams:
  - name: tenant
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=tenant&masterName=tenants&tenantId=od|MdmsRes.tenant.tenants[*].code|MdmsRes.tenant.tenants[*].name
    source: bpa
    wrapper: true
    isMandatory: true
    searchClause: where ebb.tenantid = $tenant
  - name: applicationno
    label: Application Number
    type: string
    source: bpa
    isMandatory: false
    searchClause: AND ebb.applicationno=$applicationno
  - name: fromDate
    label: From Date
    type: epoch
    source: tl
    isMandatory: false
    searchClause: AND ep.transactiondate >= $fromDate
  - name: toDate
    label: To Date
    type: epoch
    source: tl
    isMandatory: false
    searchClause: AND ep.transactiondate <= $toDate
  query: |
      select INITCAP(SPLIT_PART(ebb.tenantid,'.',2)) as ulb,ebb.applicationno as applicationno,eu.name as name,eu.mobilenumber as mobilenumber,ebb.status as currentstatus,case when billtables.businessservice in ('BPA.NC_OC_SAN_FEE','BPA.NC_SAN_FEE') then 'Permit Fee' when billtables.businessservice in ('BPA.NC_OC_APP_FEE','BPA.NC_APP_FEE') then 'Application Fee' end as feetype,to_char(to_timestamp(ep.instrumentdate / 1000), 'DD-Mon-YYYY') as paymentdate,ep.transactionnumber as receiptno,billtables.SanctionFee,billtables.EIDPFee,billtables.TemporaryRetentionFee,billtables.PurchasableFarFee,billtables.LandDevelopmentFee,billtables.RegistrationFee,billtables.ShelterFee,billtables.BuildingOperationFee,billtables.SecurityDeposit,billtables.ApplicationFee,billtables.WorkerWelfareCess,billtables.AdjustmentAmount,billtables.totalDemandAmount,billtables.totalAdjustedAmount from egcl_payment ep inner join egcl_paymentdetail epd on ep.id=epd.paymentid inner join (select eb.id,eb.consumercode,eb.businessservice,sum(case when ebad.taxheadcode in ('BPA_SANC_FEES','BPA_SANC_SANC_FEE','BPA_SANC_FEES.SANC_FEE') then ebad.amount else 0 end) SanctionFee,sum(case when ebad.taxheadcode='BPA_SANC_EIDP_FEE' then ebad.amount else 0 end) EIDPFee,sum(case when ebad.taxheadcode in ('BPA_SANC_TEMP_RETENTION_FEE','BPA_SANC_FEES.RETENTION_FEE') then ebad.amount else 0 end) TemporaryRetentionFee,sum(case when ebad.taxheadcode in ('BPA_SANC_FEES.PUR_FAR_FEE','BPA_SANC_PUR_FAR') then ebad.amount else 0 end) PurchasableFarFee,sum(case when ebad.taxheadcode in ('BPA_APPL_FEES.LAND_DEV_FEE','BPA_LAND_DEV_FEE') then ebad.amount else 0 end) LandDevelopmentFee,sum(case when ebad.taxheadcode='BPAREG_FEES' then ebad.amount else 0 end) RegistrationFee,sum(case when ebad.taxheadcode in ('BPA_SANC_FEES.SHELTER_FEE','BPA_SANC_SHELTER_FEE') then ebad.amount else 0 end) ShelterFee,sum(case when ebad.taxheadcode in ('BPA_APPL_FEES.BLDNG_OPRN_FEE','BPA_BLDNG_OPRN_FEE') then ebad.amount else 0 end) BuildingOperationFee,sum(case when ebad.taxheadcode in ('BPA_SANC_FEES.SECURITY_DEPOSIT','BPA_SANC_SECURITY_DEPOSIT') then ebad.amount else 0 end) SecurityDeposit,sum(case when ebad.taxheadcode='BPA_APPL_FEES' then ebad.amount else 0 end) ApplicationFee,sum(case when ebad.taxheadcode in ('BPA_SANC_WORKER_WELFARE_CESS','BPA_SANC_FEES.WELFARE_CESS') then ebad.amount else 0 end) WorkerWelfareCess,sum(case when ebad.taxheadcode='BPA_SANC_ADJUSTMENT_AMOUNT' then ebad.amount else 0 end) AdjustmentAmount,sum(ebad.amount) as totalDemandAmount,sum(ebad.adjustedamount) as totalAdjustedAmount from egcl_billaccountdetail ebad inner join egcl_billdetial ebd on ebd.id = ebad.billdetailid inner join egcl_bill eb on ebd.billid=eb.id where eb.tenantid =$tenant and eb.businessservice in ('BPA.NC_APP_FEE','BPA.NC_SAN_FEE') group by eb.id,eb.consumercode,eb.businessservice) billtables on epd.billid=billtables.id left outer join eg_bpa_buildingplan ebb on billtables.consumercode=ebb.applicationno inner join eg_land_ownerinfo elo on ebb.landid=elo.landinfoid inner join eg_user eu on elo.uuid=eu.uuid

- reportName: PlatformUsageReport
  summary: Platform Usage Report
  decryptionPathId: PlatformUsageReport
  version: 1.0.0
  moduleName: rainmaker-bpa
  sourceColumns:
  - name: service_availed
    label: Service Availed
    type: string
    source: bpa
    total: false
  - name: person_name
    label: Name of the Person
    type: string
    source: bpa
    total: false
  - name: contact_no
    label: Contact No.
    type: string
    source: bpa
    total: false
  - name: contact_email
    label: Contact Email
    type: string
    source: bpa
    total: false
  - name: address
    label: Address
    type: string
    source: bpa
    total: false
  - name: service_availed_date
    label: Date of Service Availed/Approved
    type: string
    source: bpa
    total: false
  - name: application_no
    label: Application No.
    type: string
    source: bpa
    total: false
  - name: permit_no
    label: Consumer/Permit No.
    type: string
    source: bpa
    total: false
  searchParams:
  - name: fromDate
    label: From Date
    type: epoch
    source: bpa
    isMandatory: true
    searchClause: and bpa.approvaldate >= $fromDate
  - name: toDate
    label: To Date
    type: epoch
    source: bpa
    isMandatory: true
    searchClause: and bpa.approvaldate <= $toDate
  query: |
      select 'OBPAS' as service_availed,usr."name" as person_name,usr.mobilenumber as contact_no,usr.emailid as contact_email,addr.address as address,TO_CHAR(to_timestamp(bpa.approvaldate/1000),'DD-MM-YYYY') as service_availed_date,bpa.applicationno as application_no,bpa.approvalno as permit_no from eg_bpa_buildingplan bpa inner join eg_land_landinfo land on land.id =bpa.landid inner join eg_land_ownerinfo ownr on ownr.landinfoid = land.id inner join eg_user usr on usr.uuid = ownr.uuid inner join eg_user_address addr on addr.userid = usr.id left outer join eg_land_institution inst on inst.id = ownr.institutionid where bpa.approvalno is not null and bpa.status ='APPROVED' and addr."type" ='CORRESPONDENCE'